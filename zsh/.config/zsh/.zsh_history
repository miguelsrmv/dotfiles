rm diddy_kong.png
rm mega_man.png
rm jigglypuff.png
cd backgrounds
find . -maxdepth 1 ! -name '*BDSP*' -type f -exec rm -f {} \;
for file in *BDSP.png; do\
  new_name="${file/Box_/}"\
  new_name="${new_name/_BDSP/}"\
  mv "$file" "$new_name"\
done\

vim api_routes.md
cd srcs/requirements/
cd src
cd ui
mv animations.ts animationsts
mv events.ts eventsts
mv helper.ts helpersts
mv helpers.ts helpersts
mv navigation.ts navigationts
cd styles
mv tailwind.css tailwindcss
cd core
cat tailwindcss
vim tailwind.config.js
vim tailwindcss.sh
cp ../backend/NOTES.md backendnotes
tree -L 2
tree
tree -L 4 > structure
mv structure structure.txt
mv backendnotes backendnotes.txt
tree -L 3 > structure.txt
lear
rm NOTES.md
mv src/organization.md NOTES.md
ln -s ../../../docs/api/api_routes.md api_routes.sl
rm api_routes.sl
rm -rf *
git commit -m "Simplified Header / Main loading"
git commit -m "Solved navigation with <a> containers, one event listener for all navigation"
git commit -m "Navigation is now trully universal, as is showMenuHelpers"
git commit -m "Fixed mouseover"
git commit -m "Gametype is gotten through modal"
git commit -m "First attempt at Local play / Remote play / Tournament prepages"
git add.
git commit -m "Button on end"
git commit -m "Guest menu beta"
firefox en.subject.pdf
curl parrot.live
git commit -m "Basic form done"
git checkout main
git merge main
git commit -m "Frontend updated with main"
cd docs
cd api
cat api_routes.md
git commit -m "Update"
docker status
docker exec -it backend
docker exec -it backend sh
docker logs
make fclean
cd srcs
nvim docker-compose.yml
cd requirements
cd frontend
cat Dockerfile
docker build --target builder 
docker build --target .
ls src/
tree -L 1
docker build --target builder .
docker build --target builder . --no-cache
git commit -m "Nginx update"
docker logs frontend
git commit -m "Frontend and Backend communicate"
git commit -m "Communicating Backend and Frontend"
git checkout Backend
git stash
git checkout Frontend
git merge Backend
cd data
cd backend_db
nvim database.db
curl backend:3000/users
curl https//backend:3000/users
curl http://backend:3000/users
curl https://padaria.42.pt/api/users
curl https://padaria.42.pt/api/users --force
curl -k https://padaria.42.pt/api/users --force
curl -k https://padaria.42.pt/api/users
curl -k https://padaria.42.pt/api/user/login
cat ~/.zsh_history | grep tailwind
tsc --watch
npm run build-ts
npm run dev-ts
git commit -m "After a big refactoring rework"
pkill nvim
make frontend down
make down
docker exec -it frontend sh
docker run -it debug-builder sh
docker build --target builder -t debug-builder -f srcs/requirements/frontend/Dockerfile .
tree -L 3
tree -L 4
cat Makefile
make frontend_clean
make frontend
make exec docker -it frontend sh
make prune
docker exec -it frontend bash
git commit -m "Small docker container fix"
git commit -m "Changed small .gitignore issue"
vim compilercommands.txt
rm compilercommands.txt
chmod 644 tsc
chmod 644 tsc.sh
sh tsc.sh
vim tsc.sh
cp tsc.sh tailwindcss.sh
vim tailwind
rm tailwindcss.sh
mv tailwind tailwindcss.sh
chmod 644 tailwindcss.sh
./tsc
./tsc.sh
chmox +x tailwindcss.sh
chmod +x tailwindcss.sh
chmod +x tsc.sh
cat tailwindcss.sh 
./tailwindcss.sh
cat tailwindcss.sh
rm * 
npm run build
npm run build-tailwind
cd dist
rm -rf * 
npm run dev-tailwind
vim README.md
vim init.lua
vim lua/kickstart/plugins/autopairs.lua
vim lua/kickstart/plugins/cmp.lua
vim lua/kickstart/plugins/conform.lua
vim lua/kickstart/plugins/debug.lua
vim lua/kickstart/plugins/gitsigns.lua
vim lua/kickstart/plugins/indent_line.lua
vim lua/kickstart/plugins/mini.lua
vim lua/kickstart/plugins/neo-tree.lua
vim lua/kickstart/plugins/telescope.lua
vim lua/kickstart/plugins/todo-comments.lua
vim lua/kickstart/plugins/treesitter.lua
vim lua/kickstart/plugins/which-key.lua
vim lua/lazy-
vim lua/lazy-plugins.lua
vim lua/options.lua
vim lua/keymaps.lua
vim lua/kickstart/lsp
vim lua/kickstart/plugins/lspconfig.lua
git commit -m "Conflicts solved"
git pull origin master
git pull upstream master
git commit -m "Changes"
git status
git log
git diff
git show
git commit -m "Correction?"
git pull
rm -rf doc
rm init.lua
rm LICENSE.md
rm -rf lua
rm README.md
git commit -m "Dotfiles cleanup"
nvim .git
cd .git
cd config
nvim config
cd .config
nvim .git/modules/
git pull kickstarter master
git clone git@github.com:dam9000/kickstart-modular.nvim.git modular
git diff nvim/init.lua modular/init.lua
diff nvim/init.lua modular/init.lua
diff nvim/lua/keymaps.lua modular/lua/keymaps.lua
diff nvim/lua/lazy-plugins.lua modular/lua/lazy-plugins.lua
diff nvim/lua/options.lua modular/lua/options.lua
diff nvim/lua/kickstart/plugins/autopairs.lua modular/lua/kickstart/plugins/autopairs.lua
diff nvim/lua/kickstart/plugins/conform.lua modular/lua/kickstart/plugins/conform.lua
cd nvim
cd lua/kickstart/plugins
cd ../../
rm -rf modular
cat .stylua.toml
rm .stylua.toml
git commit -m "Nvim cleanup"
cat init.lua
cd - 
cd ,,
rm .zshrc
mv .zshrc_2025-04-11_1744366684 .zshrc
zsh <(curl -s https://raw.githubusercontent.com/zap-zsh/zap/master/install.zsh) --branch release-v1 -k
nvim .zshrc
git commit -m "zap"
mv nvim/.config/nvim/lua/custom/plugins/blink.lua nvim/.config/nvim/lua/custom/plugins/blinklua
touch blink.lua
vim blink.lua
mv blink.lua nvim/.config/nvim/lua/custom/plugins
touch help.c
nvim help.c
rm help.c
git commit -m "Official blink?"
rm nvim/.config/nvim/lua/custom/plugins/blinklua
git commit -m "Deleted old blink"
cd nvim/.config/nvim
git pull modular master
git pull kickstart master
cd nvim/.config/nvim/lua/custom/plugins
nvim golf.vim.lua
mv golf.vim.lua golf.lua
rm golf.lua
cd nginx
mv nginx_setup.sh frontend_setup.sh
nvim frontend_setup.sh
nvim .gitignore
pacman -Syu
pacman -Qtd
pacman -Rns $(pacman -Qdtq)
rm -rf cub3d
tmux
sudo dnf remove plug
sudo dnf upgrade --refresh
echo $XDG_SESSION_TYPE
sudo dnf install ghostty
echo $SHELL
ghostty
zsh
cat .zshrc
zsh <(curl -s https://raw.githubusercontent.com/zap-zsh/zap/master/install.zsh) --branch release-v1
dnf install starship
sudo dnf install starship
cd dotfiles
starship
vim TODO.md
sudo dnf install -y gstreamer1-plugins-{bad-\*,good-\*,base} gstreamer1-plugin-openh264 gstreamer1-libav lame\* --exclude=gstreamer1-plugins-bad-free-devel
sudo dnf4 group install multimedia
dnf repolist --all
sudo dnf group install -y sound-and-video
dnf repolist --all > output
vim output
nvim output
sudo dnf clean all
rm output
cd .local/share
cd settings
nvim es_settings.xml
rg es_systems.cfg
rg *.cfg
rg .xml
rg es_systems
rg es_systems --file
rg --file es_systems
find es_systems
find es_systems -r
rg -r --file es_systems
cd -
cd Emulation/roms
rm -rf emulators
cd xbox/l
cd xbox
cat systeminfo.txt
rm systeminfo.txt
echo "System name:\
xbox\
\
Full system name:\
Microsoft Xbox\
\
Supported file extensions:\
.iso .ISO\
\
Launch command:\
%EMULATOR_XEMU% -dvd_path %ROM%\
\
Platform (for scraping):\
xbox\
\
Theme folder:\
xbox" > systeminfo.txt
cat systems.txt
cd xbox360
mv xenia.sh .xenia.sh
mv .xenia.sh xenia.sh
mv xbox360 .xbox460
mv .xbox460 .xbox360
cd .local
cd share
cd ES-DE
cd custom_systems
nvim es_systems.xml
sudo dnf remove virt-manager
sudo dnf install virt-manager
ip link show\

nvim srcs/requirements/frontend/static/index.html
rg index
fastfetch
fastfetch archlinux
sudo firewall-cmd --state
sudo firewall-cmd --get-zone-of-interface=virbr0
sysctl net.ipv4.ip_forward
sudo firewall-cmd --zone=libvirt --query-masquerade
sudo firewall-cmd --zone=libvirt --add-masquerade --permanent
sudo firewall-cmd --reload
sudo virsh net-destroy default\
sudo virsh net-start default
sudo vim /etc/libvirt/network.conf
systemctl restart libvirt
systemctl restart libvirtd
systemctl status libvirtd
cd mastersystem
cd gb
cd gbc
cd gba
cd gamegear
cd nds
cd n64
cd megadrive
cd genesis
cd snes
cd nes
rm *.zip
ncdu
mv ES-DE .local/share/
cd Applications
./ES-DE.AppImage --portable-home ~/.local/share/
./ES-DE.AppImage --help
./ES-DE.AppImage --home ~/.local/share/
mv dotfiles .dotfiles
cd .dotfiles
sudo stow nvim
stow --adopt nvim
rm -rf .config/nvim
sudo rm ~/.config/nvim
stow nvim
sudo rm ~/.config/starship.toml
stow starship
sudo rm ~/.tmux
sudo rm ~/-tmux.conf
sudo rm ~/.tmux.conf
stow tmux
rm ~/.vimrc
stow vim
rm ~/.zsh_history
rm ~/.zsh_old
rm ~/.zshrc
stow zsh
rm ~/.config/ghostty/config
stow ghostty
ls -la
ls -l
cat TODO.md
nvim TODO.md
sudo dnf update
flatpak update
cd Emulation
cd roms
sudo fwupdmgr get-devices
sudo fwupdmgr refresh --force
sudo fwupdmgr get-updates
sudo fwupdmgr update
flatpak remote-delete fedora
flatpak remote-add --if-not-exists flathub https://flathub.org/repo/flathub.flatpakrepo
flatpak update --appstream
docker start backend
make clean
make
docker stop backend
git commit -m "Error page added to deal with odd situations"
ls
cat TODOs.md
cd srcs/requirements/frontend
nvim
rm TODOS.md
git add .
git commit -m "Removed TODOs"
git push
cd ..
make status
docker logs backend
clear
cd srcs/requirements/frontend
sudo npm run dev-ts
sudo npm run dev-tailwind
ls
nvim
cd ..
clear
nvim .zshenv
clear
source .zshenv
nvim .zshenv
source .zshenv
cd $DOTFILESDIR/themeSwitcher/.config
ls
cd $DOTFILESDIR/themeSwitcher
ls
ls -la
cd .local
ls
cd share
ls
cd themeSwitcher
ls
cd themes
ls
cd dracula
ls
mv ~/be9458ba9ca2afbc2da8ace43861685ac9c7.png ./background.png
clear
cd ~
clear
themeSwitcher
themeSwitcher
cd $DOTFILESDIR
git add .
git commit -m "Dracula background"
git push
sudo reboot now
themeSwitcher
sudo reboot now
cd ~
ls
cd Obsidian
ls
sl
cd MainVault
ls
clear
fzf
man fzf
echo $OBSIDIAN_VAULT
cat ~/.zshenv
ls
find .
clear
find . -f
find . --type=f
man find
sudo dnf install tldr
clear
tldr find
ls
cd Coding
ls
cd ..
source ~/.zshenv
cd $OBSIDIAN_VAULT/Coding/CheatSheets
ls
